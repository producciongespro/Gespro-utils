{"mappings":"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","sources":["src/index.js","src/akiri.js","src/search-tags.js","src/get-today.js","src/storage.js","src/arrays.js","src/platform.js","src/date-convert.js"],"sourcesContent":["import * as akiri from \"./akiri.js\";\r\nimport _searchTags from \"./search-tags.js\";\r\nimport _getToday from \"./get-today.js\";\r\nimport { ins, get, find, del } from \"./storage.js\";\r\nimport {findById, findByKey} from \"./arrays.js\";\r\nimport _platform from \"./platform.js\";\r\nimport _dateConvert from \"./date-convert.js\";\r\n\r\n/**\r\n * ***Get Data:*** Obtiene datos de un servicio REST en formato JSON\r\n * @param {string} url\r\n * @returns {JSON} Respuesta del servidor\r\n */\r\nexport async function getData(url) {\r\n  const res = await akiri.getData(url);\r\n  return res;\r\n}\r\n\r\n/**\r\n * ***Send Data:*** Envia datos al servidor en formato json\r\n * @param {string} url\r\n * @param {object} data\r\n * @param {string} method\r\n * @returns {JSON} Respuesta del servidor\r\n */\r\nexport async function sendData(url, data, method) {\r\n  const res = await akiri.sendData(url, data, method);\r\n  return res;\r\n}\r\n\r\n/**\r\n * ***send FormData:*** Envia datos de tipo formdata al servidor. Permite envio de archivos.\r\n * @param {string} url\r\n * @param {FormData} items\r\n * @param {string} method\r\n * @returns {JSON} Respuesta del servidor\r\n */\r\nexport async function sendFormData(url, items, method) {\r\n  const res = await akiri.sendFormData(url, items, method);\r\n  return res;\r\n}\r\n\r\n/**\r\n * ***Search in tags*** Permite buscar una palabra o frase en un determinado campo de un array.\r\n *\r\n * Si el campo *\"field\"* se omite, la función busca en el campo \"tags\"\r\n * @param {string} word\r\n * @param {array} array\r\n * @param {string} field\r\n * @returns {array} Arreglo filtrado\r\n */\r\nexport function searchTags(word, array, field) {\r\n  return _searchTags(word, array, field);\r\n}\r\n\r\n/**\r\n * ***get Today´s date:*** Obtiene la fecha actual en diferentes formatos según el parámetro que reciba.\r\n *\r\n *  Si el parámetro se omite, devuelve la fecha en formato dd-mm-yy\r\n * @param {string} opt\r\n * @returns { string} Fecha actual (hoy)\r\n * @returns { object} objeto Fecha actual (hoy) (Si recibe como parámetro la cadena \"full\")\r\n */\r\nexport function getToday(opt) {\r\n  return _getToday(opt);\r\n}\r\n\r\n/**\r\n * ***Storage insert:*** Inserta en localStorage un arreglo, el cual puede contener cadenas de texto,\r\n * objetos, números o booleanos.\r\n * @param {string} name\r\n * @param {any} value\r\n * @returns {boolean} **isInserted**: Indica con un true si el dato se insertó de forma correcta.\r\n */\r\nexport function stIns(name, value) {\r\n  return ins(name, value);\r\n}\r\n\r\n/**\r\n * ***Storage Get Data:*** Obtiene el arreglo del dato almacenado por el nombre.\r\n * @param {string} name \r\n * @returns {array} arreglo de datos alamcenados en local storage.\r\n */\r\nexport function stGet(name) {\r\n  return get(name);\r\n}\r\n\r\n/**\r\n * ***Storage find element:*** Devuelve el índice del elemento buscado. Si no se encuentra el elemento \r\n * devuelve un -1\r\n * @param {string} name \r\n * @param {string} value \r\n * @returns {number} indice del elemento en el array.\r\n */\r\nexport function stFind(name, value) {\r\n  return find(name, value);\r\n}\r\n\r\n/**\r\n * ***Storage delete:*** Elimina un objeto almacedo en determinado array (name)\r\n * @param {string} name \r\n * @param {string} value \r\n * @returns {boolean} retorna verdadero si realizó la operación de eliminado.\r\n */\r\nexport function stDel(name, value) {\r\n  return del(name, value);\r\n}\r\n\r\n/**\r\n * **Find by id in array:** Busca un elemento de un array mediante el campo id.\r\n * @param {Array} array \r\n * @param {String} id \r\n * @returns {Object} Objeto encontrado (registro)\r\n */\r\nexport function arrayFindById (array, id ) {\r\n  const res = findById(array, id);\r\n  return res;\r\n} \r\n\r\n/**\r\n * **Find by key in array:** Obtiene un arreglo filtrado por una palabra determinada (word)\r\n * en un campo dato (key).\r\n * @param {array} array \r\n * @param {String} key \r\n * @param {*} word \r\n * @returns {array} arreglo filtrado.\r\n */\r\nexport function arrayFindByKey(array, key, word) {\r\n  const res = findByKey(array, key, word);\r\n  return res\r\n}\r\n\r\n/**\r\n * Get kind of device (platform) runing the app.\r\n * \r\n * *[ win - mac - linux - android - ios ]*\r\n * @param {empty} \r\n * @returns {string} platform\r\n */\r\nexport function platform() {\r\n    return _platform();\r\n}\r\n\r\n/**\r\n * Convert date from YY-DD-MM to DD-MM-YY\r\n * \r\n* 🗓️ if mode == \"text\" returns \"dd MONTH. YY\"\r\n*\r\n* 📆 if mode == null returns \"dd/mm/yy\"\r\n * @param {String} date \r\n * @param {String} mode \r\n * @returns {String} convertedDate\r\n */\r\nexport function dateConvert (date, mode) {\r\n  return _dateConvert (date, mode );\r\n}\r\n\r\n","/* \r\nFunciones Ajax: get y post\r\nakiri del esperanto signfica obtener\r\n*/\r\n\r\n/* \r\nobtener: obtiene una respuesta de servidor y la parse a json\r\ninputs-> url: url de API para obtener los datos\r\noutput-> respuesta de servidor en formato JSON\r\n\r\n*/\r\nexport async function getData(url) {\r\n  let res = null;\r\n  try {\r\n    res = await fetch(url);\r\n    res = await res.json();\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  return res;\r\n}\r\n\r\nexport async function sendData (url, data, method) {\r\n  let res = null;\r\n  if (!method) {\r\n    method = \"POST\";\r\n  }\r\n\r\n  try {\r\n    res = await fetch(url, {\r\n      method: method,\r\n      body: JSON.stringify(data),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  res = await res.json();\r\n  return res;\r\n};\r\n\r\nexport async function sendFormData (url, items, method) {\r\n  const formData = new FormData();\r\n\r\n  if (!method) {\r\n    method=\"POST\"\r\n  }\r\n\r\n  for (let index = 0; index < items.length; index++) {\r\n    formData.append(items[index].name, items[index].val);\r\n    //console.log(\"items[index].name\", items[index].name);\r\n    //console.log(\"items[index].val\", items[index].val);\r\n  }\r\n\r\n  const resp = await fetch(url, {\r\n    method: method,\r\n    body: formData,\r\n  });\r\n  let json = await resp.json();\r\n  return json;\r\n};\r\n","export default function _searchTags(word, array, field ) {\r\n  let tmpArray = [];\r\n\r\n  //si la variable campo está vacía se agrega \"tags\" por defecto\r\n  if (!field) {\r\n    field = \"tags\"\r\n  }\r\n\r\n  word = word.toLowerCase();\r\n  word = eliminarTildes(word);\r\n  //console.log(\"word ingresada:\", word);\r\n  const patt = new RegExp(word);  \r\n\r\n  array.forEach((item) => {\r\n    let str =  eliminarTildes (item[field]);\r\n    str = str.toLowerCase();\r\n    const res = patt.test(str);\r\n    if (res) {\r\n      tmpArray.push(item);\r\n    }\r\n  }); \r\n  return tmpArray;\r\n}\r\n\r\nconst eliminarTildes = (cadena) => {\r\n  //console.log(\"cadena:\",cadena);\r\n  let tmpCadena = cadena.replace(/á/g, \"a\");\r\n  tmpCadena = tmpCadena.replace(/é/g, \"e\");\r\n  tmpCadena = tmpCadena.replace(/í/g, \"i\");\r\n  tmpCadena = tmpCadena.replace(/ó/g, \"o\");\r\n  tmpCadena = tmpCadena.replace(/ú/g, \"u\");\r\n  //console.log(\"tmpCadena\",tmpCadena);\r\n  return tmpCadena;\r\n};\r\n","const date = new Date();\r\nconst year = date.getFullYear();\r\nconst month = date.getMonth() + 1;\r\nconst day = date.getDate();\r\n\r\nexport default function _getToday(opt) {\r\n  let tmpDate = null;\r\n\r\n  if (!opt) {\r\n    opt = \"hoy\";\r\n  }\r\n\r\n  switch (opt) {\r\n    case \"t\":\r\n      tmpDate = addZero();\r\n      break;\r\n    case \"hoy\":\r\n      tmpDate = day + \"-\" + month + \"-\" + year;\r\n      break;\r\n    case \"m\":\r\n      tmpDate = month;\r\n      break;\r\n    case \"d\":\r\n      tmpDate = day;\r\n      break;\r\n    case \"y\":\r\n      tmpDate = year;\r\n      break;\r\n    case \"full\":\r\n      tmpDate = { day, month, year };\r\n      break;\r\n\r\n    default:\r\n      tmpDate = \"uknown option\";\r\n      break;\r\n  }\r\n  return tmpDate;\r\n}\r\n\r\nfunction addZero() {\r\n  let newDate;\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDate();\r\n\r\n  if (month <= 9) {\r\n    newDate = `${year}-0${month}-${day}`;\r\n  } else {\r\n    newDate = `${year}-${month}-${day}`;\r\n  }\r\n  return newDate;\r\n}\r\n","/*\r\n * Operaciones con almacenamiento local \r\n */\r\n\r\nexport function ins (nombre, valor) {\r\n    //console.log(nombre, \"--->\", valor);\r\n    //Priemro verifica que el dato localstorage esté almacenado    \r\n    let tmpData = localStorage.getItem(nombre);\r\n    let isAlmacenado=null;\r\n\r\n    if (tmpData) {\r\n        //------- Instrucciones si encuentra el dato en LS\r\n        //parserar el string a json\r\n        tmpData = JSON.parse(tmpData);\r\n        //Antes de almacenar verifica que no se encuentre en el array \r\n        //para evitar elementos duplicados \r\n        //console.log(tmpData);\r\n        const indice = tmpData.indexOf(valor);\r\n        //console.log(\"indice\", indice);\r\n                // Si el índice es igual a -1 significa que no el elemento no está agregado \r\n                // por lo que procede a inlcuirlo\r\n                if (indice === -1) {\r\n                    //hace el push en el arreglo en memroia \r\n                    tmpData.push(valor);\r\n                    //crar un nuevo arreglo en localsotarge con el dato actualizado (Sustiuye el que estaba en LS)\r\n                    localStorage.setItem(nombre, JSON.stringify(tmpData));\r\n                    isAlmacenado=true;\r\n                } else {\r\n                    //si el índice es mayor a -1 singifica que ya está el elemento por lo tanto \r\n                    //no icnluye nada\r\n                    //console.log(\"El valor ya ha sido agregado anteriormente\");\r\n                    isAlmacenado=false;\r\n                }\r\n                \r\n    } else {\r\n        //------- Instrucciones si NO encuentra el dato en LS\r\n        //Convierte tmpData a array\r\n        tmpData=[];\r\n        //Inserta el valor:\r\n        tmpData.push(valor);\r\n        //Crea el dato LS por primera vez\r\n        localStorage.setItem(nombre, JSON.stringify(tmpData));\r\n        isAlmacenado=true;\r\n    }\r\n    return isAlmacenado;\r\n};\r\n\r\nexport function get (nombre) {\r\n    //console.log(\"nombre en obtener\", nombre);\r\n    let tmpData = localStorage.getItem(nombre);\r\n    return JSON.parse(tmpData);\r\n};\r\n\r\nexport function find (nombre, valor) {\r\n    let indice=-1;\r\n    let tmpData = localStorage.getItem(nombre);\r\n    if (tmpData) {\r\n        tmpData= JSON.parse(tmpData);\r\n        indice= tmpData.indexOf(valor);\r\n    }\r\n  return indice;\r\n};\r\n\r\nexport function del (nombre, valor) {\r\n    let tmpData = localStorage.getItem(nombre);\r\n    let isEliminado=false;\r\n    if (tmpData) {\r\n        tmpData= JSON.parse(tmpData);\r\n        const indice= tmpData.indexOf(valor);\r\n        //console.log(\"tmpData\",tmpData);\r\n        //console.log(\"indice del LS\", indice);        \r\n        tmpData.splice(indice,1);        \r\n        //console.log(\"tmpData después del splice\", tmpData);\r\n        localStorage.setItem(nombre, JSON.stringify(tmpData) );\r\n        isEliminado=true;                \r\n    }\r\n    return isEliminado;\r\n}\r\n\r\n","\r\nexport function findByKey (array, llave, valor) {    \r\n    valor = valor.toString();\r\n    let tmpData = [];\r\n    \r\n    //console.log(\"*********Filtro por criterio llave\", llave);    \r\n    //console.log(\"******Valor de la llave\", valor );        \r\n    //console.log(\"aaray recibido para filtrar\", array);            \r\n    \r\n    if (array.length > 0) {\r\n        const limite = array.length;        \r\n        for (let index = 0; index < limite; index++) { \r\n            //console.log( array[index][ llave ] );\r\n\r\n            if ( array[index][ llave ] === valor  ) {\r\n                tmpData.push(array[index]);\r\n            } \r\n        }                 \r\n    }\r\n    //console.log(\"Arreglo retornado\", tmpData);    \r\n    return tmpData;\r\n}\r\n\r\nexport function findById (array, id) {     \r\n    //console.log(\"array recibido\", array);\r\n    const limite= array.length;\r\n    let item=null;\r\n    id= id.toString();\r\n    //console.log(\"id recibidia\", id);\r\n    for (let index = 0; index < limite; index++) {\r\n        if (array[index].id === id) {\r\n            item = array[index]\r\n        }        \r\n    }\r\n    return item;\r\n}\r\n","//fuente: https://www.geeksforgeeks.org/detect-the-operating-system-of-user-using-javascript/\r\nexport default function _platform() {\r\n  let p = null;\r\n  if (navigator.userAgent.indexOf(\"Win\") != -1) {\r\n    p = \"win\";\r\n  }\r\n  if (navigator.userAgent.indexOf(\"Mac\") != -1) {\r\n    p = \"mac\";\r\n  }\r\n  if (navigator.userAgent.indexOf(\"Linux\") != -1) {\r\n    p = \"linux\";\r\n  }\r\n  if (navigator.userAgent.indexOf(\"Android\") != -1) {\r\n    p = \"android\";\r\n  }\r\n  if (navigator.userAgent.indexOf(\"like Mac\") != -1) {\r\n    p = \"ios\";\r\n  }\r\n\r\n  return p;\r\n}\r\n","export default function _dateConvert(param, mode) {\r\n  let newDate;\r\n  let months = [\r\n    \"ene\",\r\n    \"feb\",\r\n    \"mar\",\r\n    \"abr\",\r\n    \"may\",\r\n    \"jun\",\r\n    \"jul\",\r\n    \"ago\",\r\n    \"set\",\r\n    \"oct\",\r\n    \"nov\",\r\n    \"dic\",\r\n  ];\r\n\r\n  let arrayDate = param.split(\"-\");\r\n  let day = arrayDate[2];\r\n  let month = arrayDate[1];\r\n  let year = arrayDate[0];\r\n\r\n  if (mode === \"text\") {\r\n    newDate = `${day} ${months[parseInt(month) - 1]}. ${year}`;\r\n  } else {\r\n    newDate = `${day}/${month}/${year}`;\r\n  }\r\n\r\n  return newDate;\r\n}\r\n"],"names":[],"version":3,"file":"main.js.map"}